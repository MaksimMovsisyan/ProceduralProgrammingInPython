subroutine WriteMatrix(matrix, n, m)
	implicit none
	integer, intent(in) :: n, m
	integer i, j
	real(8) matrix(n,m)
	do i = 1, n
		do j = 1, m
			write(*,'(f22.15$)') matrix(i,j)
		end do
		write(*,*)
	end do
end subroutine

real(8) function f(x, b)
	implicit none
	real(8) x, b
	f = (dtan(x))**(-1) - x/b

end function

real(8) function HalfDevisionMethod(n, Bi)
	implicit none
	integer, intent(in) :: n
	real(8) f, a, b, c, Eps1, Bi, pi, fb, fc
	Eps1 = 1e-6
	pi = 3.141592653589793d0

	a = pi*(n - 1)
	b = pi*(n - 0.5)
	fb = f(b, Bi)
	do while(dabs(b - a) >= Eps1)
		c = (a + b)/2
		fc = f(c, Bi)
		if (fc*fb < 0) then
			a = c
		else
			b = c
			fb = fc 
		end if
	end do

	HalfDevisionMethod = (a + b)/2
end function

subroutine Work(Fo_max, Bi)
	implicit none
	real(8) Fo_max, Fo, dFo, Bi, Eps2, mu_n, A_n, Sol, Sol_n, HalfDevisionMethod, X(3), Fo_i(3), Xo, dXo
	integer n, i, m
	Eps2 = 1e-6
	m = 50

	!Time
	Fo = 0.d0
	dFo = Fo_max/(m-1)
!	Fo = Fo - dFo
	do i = 1, 3
		X(i) = 0 + (i-1)/2d0
	end do


	!Coordinates
	Fo_i(1) = Fo_max*0.1d0
	Fo_i(2) = Fo_max*0.5d0
	Fo_i(3) = Fo_max*0.9d0
	Xo = 0.d0
	dXo = 1.d0/(m-1)

	open(27, file = 'Result3_X.txt', status = 'replace')
		do while(Xo <= 1.d0) !do while(Fo <= Fo_max)
			Xo = Xo + dXo   !Fo = Fo + dFo
			n = 0
			Sol = 0
			Sol_n = 10.d0
			do while(dabs(Sol_n) >= Eps2)
				n = n + 1
				mu_n = HalfDevisionMethod(n, Bi)
				A_n = 2*dsin(mu_n)/(mu_n + dsin(mu_n)*dcos(mu_n))
				Sol_n = A_n * dexp(-mu_n**2 * Fo_i(3)) * dcos(mu_n*Xo)			 !Sol_n = A_n * dexp(-mu_n**2 * Fo) * dcos(mu_n*X(1))
				Sol = Sol + Sol_n 
			end do
			write(27, '(f22.15$)') Xo				   !write(27, '(f22.15$)') Fo
			write(27, '(f22.15$)') Sol 
			write(27, '(i4)') n
	
		end do
	close(27)

end subroutine



program lab1
	implicit none
	real(8) Bi, Fo_max, l, alfa, d 
	d = 0.015d0
	l = 0.15d0


	write(*,'(a$)') ' alfa = '
	read(*,*) alfa
	Bi = (alfa*d)/(2*l)
	if (Bi < 1.25) then
		Fo_max = 3.11*Bi**(-0.88)
	elseif (Bi >= 1.25 .and. Bi <= 20) then
		Fo_max = 2.76*Bi**(-0.31)
	else
		Fo_max = 1.1
	end if 

		
	call Work(Fo_max, Bi)
end program